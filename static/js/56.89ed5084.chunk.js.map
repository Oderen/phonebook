{"version":3,"file":"static/js/56.89ed5084.chunk.js","mappings":"yLAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMI,MAAV,EACzBC,EAAgB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EACrBC,EAAkB,SAAAP,GAAK,OAAIA,EAAMC,SAASO,SAAnB,E,UCFpC,EAAsC,oCAAtC,EAAgG,oCAAhG,EAA0J,oCAA1J,EAAmN,mC,mBC2BnN,EAtBe,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACVC,GAAcC,EAAAA,EAAAA,KAAY,SAAAX,GAAK,OAAIA,EAAMI,MAAV,IACrC,OACE,gBAAKQ,UAAWC,EAAhB,UACE,mBAAOD,UAAWC,EAAlB,UAA2C,yBAEzC,kBACED,UAAWC,EACXC,KAAK,OACLC,KAAK,SACLC,MAAON,EACPO,QAAQ,yHACRC,MAAM,yIACNC,SAAUV,EACVW,UAAQ,KAEV,SAAC,MAAD,CAAUR,UAAWC,QAI5B,ECzBD,EAA0B,yBAA1B,EAAiE,6BAAjE,EAA+G,gCAA/G,EAA+J,+BAA/J,EAAsN,uCCEvM,SAASQ,EAAT,GAA0C,IAAvBpB,EAAsB,EAAtBA,SAAUqB,EAAY,EAAZA,SAC1C,OACE,8BACGrB,EACEsB,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,GAAKF,EAAEE,EAAnB,IACLC,KAAI,WAAuBC,GAAvB,IAAGC,EAAH,EAAGA,IAAKd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,MAAd,OACH,gBAAclB,UAAWC,EAAzB,WACE,gBAAID,UAAWC,EAAf,UAAmC,WAASe,EAAQ,MACpD,iBAAKhB,UAAWC,EAAhB,WACE,eAAGD,UAAWC,EAAd,WACE,iBAAMkB,MAAO,CAAEC,WAAY,IAAKC,YAAa,IAA7C,SAAmD,WAClDlB,MAEH,eAAGH,UAAWC,EAAd,WACE,iBAAMkB,MAAO,CAAEC,WAAY,IAAKC,YAAa,IAA7C,SAAmD,WAAc,IAChEH,MAEH,mBACElB,UAAWC,EACXC,KAAK,SACLoB,QAAS,kBAAMZ,EAASO,EAAf,EAHX,SAIC,gBAfIA,EADN,KAwBZ,CC/BD,MAA8B,iCCGf,SAASM,EAAT,GAA8C,IAAvBlC,EAAsB,EAAtBA,SAAUqB,EAAY,EAAZA,SAC9C,OACE,eAAIV,UAAWC,EAAf,UACE,SAACQ,EAAD,CAA2BpB,SAAUA,EAAUqB,SAAUA,GAA3CrB,EAASyB,KAG5B,C,iCCTD,EAA+B,kCAA/B,EAAuF,yCAAvF,EAAsJ,yCAAtJ,EAAqN,yCAArN,EAAkR,uCAAlR,EAA4U,sCCQtUU,EAAkB,SAACC,EAAKC,GAC5B,OAA0BC,EAAAA,EAAAA,WAAS,WAAO,IAAD,EACvC,iBAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQP,WAA9C,QAAuDC,CACxD,IAFD,eAAOtC,EAAP,KAAc6C,EAAd,KAQA,OAJAC,EAAAA,EAAAA,YAAU,WACRJ,OAAOC,aAAaI,QAAQV,EAAKG,KAAKQ,UAAUhD,GACjD,GAAE,CAACqC,EAAKrC,IAEF,CAACA,EAAO6C,EAChB,EA8FD,EA5FoB,SAAC,GAAuB,IAArBI,EAAoB,EAApBA,cACfhD,GAAWU,EAAAA,EAAAA,IAAYZ,GAE7B,EAAwBqC,EAAgB,OAAQ,IAAhD,eAAOrB,EAAP,KAAamC,EAAb,KACA,EAA4Bd,EAAgB,SAAU,IAAtD,eAAOe,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBxC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,OACHmC,EAAQlC,GACR,MACF,IAAK,SACHoC,EAAUpC,GACV,MACF,QACE,OAEL,EAiBKwC,EAAmB,SAAAzC,GACvB,IAAM0C,EAAiB1C,EAAK2C,cAE5B,OAAOzD,EAAS0D,MACd,SAAAC,GAAO,OAAIA,EAAQ7C,KAAK2C,gBAAkBD,CAAnC,GAEV,EAEKI,EAAQ,WACZX,EAAQ,IACRE,EAAU,GACX,EAED,OACE,kBAAMxC,UAAWmB,EAAoB+B,SA7BtB,SAAAR,GACfA,EAAES,iBAEF,MAAyBT,EAAEU,cAAcC,SAAjClD,EAAR,EAAQA,KAAMoC,EAAd,EAAcA,OAEd,GAAIK,EAAiBzC,EAAKC,OAGxB,OAFAsC,EAAEU,cAAcH,aAChBK,IAAAA,OAAAA,QAAA,UAA2BnD,EAAKC,MAAhC,4BAIFiC,EAAc,CAAElC,KAAMA,EAAKC,MAAOc,MAAOqB,EAAOnC,QAChD6C,GACD,EAgBC,WACE,gBAAKjD,UAAWmB,EAAhB,UACE,mBAAOnB,UAAWmB,EAAlB,UAA6C,QAE3C,kBACEnB,UAAWmB,EACXjB,KAAK,OACLC,KAAK,OACLC,MAAOD,EACPE,QAAQ,iBACRkD,YAAY,gBACZjD,MAAM,yIACNC,SAAUkC,EACVjC,UAAQ,KAEV,SAAC,MAAD,CAAQR,UAAWmB,UAGvB,gBAAKnB,UAAWmB,EAAhB,UACE,mBAAOnB,UAAWmB,EAAlB,UAA6C,UAE3C,kBACEnB,UAAWmB,EACXjB,KAAK,MACLC,KAAK,SACLC,MAAOmC,EACPlC,QAAQ,kBACRkD,YAAY,eACZjD,MAAM,+FACNC,SAAUkC,EACVjC,UAAQ,KAEV,SAAC,MAAD,CAASR,UAAWmB,UAGxB,mBAAQnB,UAAWmB,EAAwBjB,KAAK,SAAhD,SAAyD,kBAK9D,EC9GD,EAA2B,gCAA3B,EAAsE,gCAAtE,EAAwH,uCAAxH,EAA4K,kCAA5K,EAAiO,wCCqFjO,EApEsB,WACpB,IAAMsD,GAAgBC,EAAAA,EAAAA,SAAO,GACvBC,GAAWC,EAAAA,EAAAA,MAEXtE,GAAWU,EAAAA,EAAAA,IAAYZ,GACvBW,GAAcC,EAAAA,EAAAA,IAAYR,GAC1BqE,GAAU7D,EAAAA,EAAAA,IAAYN,GACtBG,GAAYG,EAAAA,EAAAA,IAAYJ,IAE9BuC,EAAAA,EAAAA,YAAU,WACJsB,EAAcK,QAChBL,EAAcK,SAAU,EAG1BH,GAASI,EAAAA,EAAAA,MACV,GAAE,CAACJ,IAEJ,IAcMK,EAAmBjE,EAAYgD,cAC/BkB,EAAmB3E,EAASG,QAAO,SAAAwD,GAAO,OAC9CA,EAAQ7C,KAAK2C,cAAcmB,SAASF,EADU,IAIhD,OACE,oBAAS/D,UAAWC,EAApB,UACE,iBAAKD,UAAU,YAAf,WACE,eAAIA,UAAWC,EAAf,SAAoC,eACpC,SAAC,EAAD,CAAaoC,cAvBE,SAAA6B,GACnBR,GAASS,EAAAA,EAAAA,IAAWD,GACrB,IAsBMN,IAAW,wBAAI,8BACfhE,IAAa,SAACwE,EAAA,EAAD,IAEb/E,EAASgF,OAAS,IAAMT,IAAYhE,IACnC,iBAAKI,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAAoC,cACpC,SAAC,EAAD,CAAQJ,aA1BG,SAAA6C,GACnB,IAAM4B,EAAQ5B,EAAEU,cAAchD,MAE9BsD,EAAS,CAAExD,KAAM,gBAAiBqE,QAASD,GAC5C,KAuBS,SAAC/C,EAAD,CACElC,SAAU2E,EACVtD,SAvBc,SAAA8D,GACxBd,GAASe,EAAAA,EAAAA,IAAcD,GACxB,QA0BO5E,GAAaP,EAASgF,OAAS,IAAMT,IACrC,iBAAK5D,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAAoC,cACpC,gBAAKD,UAAWC,EAAhB,UACE,cAAGD,UAAWC,EAAd,SAAoC,uCAOjD,C","sources":["redux/selectors.js","webpack://phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://phonebook/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://phonebook/./src/pages/PhonebookPage/PhonebookPage.module.css?4961","pages/PhonebookPage/PhonebookPage.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectFilterQuery = state => state.filter;\nexport const selectIsError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsForm__field\":\"Filter_contactsForm__field__7FuxX\",\"findContacts__label\":\"Filter_findContacts__label__3dmDz\",\"findContacts__input\":\"Filter_findContacts__input__vzDRf\",\"findContacts__icon\":\"Filter_findContacts__icon__t+VAU\"};","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux/es';\n\nimport css from './Filter.module.css';\nimport { ImSearch } from 'react-icons/im';\n\nconst Filter = ({ changeFilter }) => {\n  const filterQuery = useSelector(state => state.filter);\n  return (\n    <div className={css.contactsForm__field}>\n      <label className={css.findContacts__label}>\n        Find contacts by name\n        <input\n          className={css.findContacts__input}\n          type=\"text\"\n          name=\"filter\"\n          value={filterQuery}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={changeFilter}\n          required\n        />\n        <ImSearch className={css.findContacts__icon} />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"Contact_contact__4zmlP\",\"inner-block\":\"Contact_inner-block__fBzj8\",\"contact__title\":\"Contact_contact__title__vg4TK\",\"contact__text\":\"Contact_contact__text__L-D6Z\",\"contact__deleteButton\":\"Contact_contact__deleteButton__xec47\"};","import PropTypes from 'prop-types';\nimport css from './Contact.module.css';\n\nexport default function Contact({ contacts, onDelete }) {\n  return (\n    <>\n      {contacts\n        .sort((a, b) => b.id - a.id)\n        .map(({ _id, name, phone }, index) => (\n          <li key={_id} className={css.contact}>\n            <h3 className={css.contact__title}>Contact {index + 1}</h3>\n            <div className={css['inner-block']}>\n              <p className={css.contact__text}>\n                <span style={{ fontWeight: 700, marginRight: 10 }}>Name: </span>\n                {name}\n              </p>\n              <p className={css.contact__text}>\n                <span style={{ fontWeight: 700, marginRight: 10 }}>Phone:</span>{' '}\n                {phone}\n              </p>\n              <button\n                className={css.contact__deleteButton}\n                type=\"button\"\n                onClick={() => onDelete(_id)}\n              >\n                Delete\n              </button>\n            </div>\n          </li>\n        ))}\n    </>\n  );\n}\n\nContact.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactList\":\"ContactList_ContactList__2mXfy\"};","import Contact from '../Contact';\nimport PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\n\nexport default function ContactList({ contacts, onDelete }) {\n  return (\n    <ul className={css.ContactList}>\n      <Contact key={contacts.id} contacts={contacts} onDelete={onDelete} />\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsForm\":\"ContactForm_contactsForm__6k3Pf\",\"contactsForm__field\":\"ContactForm_contactsForm__field__BK+RE\",\"contactsFrom__label\":\"ContactForm_contactsFrom__label__U5iQK\",\"contactsForm__input\":\"ContactForm_contactsForm__input__OcYDb\",\"contactsForm__svg\":\"ContactForm_contactsForm__svg__52Sl+\",\"contacts__button\":\"ContactForm_contacts__button__+PagL\"};","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux/es';\nimport { selectContacts } from '../../redux/selectors';\nimport { ImUser } from 'react-icons/im';\nimport { ImPhone } from 'react-icons/im';\nimport Notiflix from 'notiflix';\nimport style from './ContactForm.module.css';\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n};\n\nconst ContactForm = ({ sendDataToApp }) => {\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useLocalStorage('name', '');\n  const [number, setNumber] = useLocalStorage('number', '');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = e.currentTarget.elements;\n\n    if (onDuplicateCheck(name.value)) {\n      e.currentTarget.reset();\n      Notiflix.Notify.failure(`${name.value} is already in contacts`);\n      return;\n    }\n\n    sendDataToApp({ name: name.value, phone: number.value });\n    reset();\n  };\n\n  const onDuplicateCheck = name => {\n    const newContactName = name.toLowerCase();\n\n    return contacts.some(\n      contact => contact.name.toLowerCase() === newContactName\n    );\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={style.contactsForm} onSubmit={onSubmit}>\n      <div className={style.contactsForm__field}>\n        <label className={style.contactsFrom__label}>\n          Name\n          <input\n            className={style.contactsForm__input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Z\\s]+$\"\n            placeholder=\"Rosie Simpson\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            onChange={handleChange}\n            required\n          />\n          <ImUser className={style.contactsForm__svg} />\n        </label>\n      </div>\n      <div className={style.contactsForm__field}>\n        <label className={style.contactsFrom__label}>\n          Number\n          <input\n            className={style.contactsForm__input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"^[+]?[0-9\\s]+$\"\n            placeholder=\"+123 456 789\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            onChange={handleChange}\n            required\n          />\n          <ImPhone className={style.contactsForm__svg} />\n        </label>\n      </div>\n      <button className={style.contacts__button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  sendDataToApp: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contatcs\":\"PhonebookPage_contatcs__-wthD\",\"contacts\":\"PhonebookPage_contacts__rkBF6\",\"contacts__title\":\"PhonebookPage_contacts__title__FkCD1\",\"noContacts\":\"PhonebookPage_noContacts__u8CUG\",\"noContacts__text\":\"PhonebookPage_noContacts__text__slsyw\",\"findContacts__label\":\"PhonebookPage_findContacts__label__gSJex\",\"findContacts__input\":\"PhonebookPage_findContacts__input__acELO\",\"findContacts__icon\":\"PhonebookPage_findContacts__icon__czUgj\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useRef } from 'react';\n\nimport { fetchContacts, deleteContact, addContact } from 'redux/ApiOperations';\nimport {\n  selectContacts,\n  selectFilterQuery,\n  selectIsError,\n  selectIsLoading,\n} from '../../redux/selectors';\n\nimport Loader from '../../components/Loader';\nimport Filter from '../../components/Filter';\nimport ContactList from '../../components/ContactList';\nimport ContactForm from '../../components/ContactForm';\n\nimport css from './PhonebookPage.module.css';\n\nconst PhonebookPage = () => {\n  const isFirstRender = useRef(true);\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const filterQuery = useSelector(selectFilterQuery);\n  const isError = useSelector(selectIsError);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const formOnSubmit = newContact => {\n    dispatch(addContact(newContact));\n  };\n\n  const changeFilter = e => {\n    const query = e.currentTarget.value;\n\n    dispatch({ type: 'filter/filter', payload: query });\n  };\n\n  const deleteContactById = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const normalizedFilter = filterQuery.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <section className={css.contatcs}>\n      <div className=\"container\">\n        <h1 className={css.contacts__title}>Phonebook</h1>\n        <ContactForm sendDataToApp={formOnSubmit} />\n        {isError && <h1>Ops, something went wrong</h1>}\n        {isLoading && <Loader />}\n\n        {contacts.length > 0 && !isError && !isLoading && (\n          <div className={css.contacts}>\n            <h2 className={css.contacts__title}>Contacts</h2>\n            <Filter changeFilter={changeFilter} />\n            <ContactList\n              contacts={filteredContacts}\n              onDelete={deleteContactById}\n            />\n          </div>\n        )}\n\n        {!isLoading && contacts.length < 1 && !isError && (\n          <div className={css.contacts}>\n            <h2 className={css.contacts__title}>Contacts</h2>\n            <div className={css.noContacts}>\n              <p className={css.noContacts__text}>There are no contacts yet</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["selectContacts","state","contacts","items","selectFilterQuery","filter","selectIsError","error","selectIsLoading","isLoading","changeFilter","filterQuery","useSelector","className","css","type","name","value","pattern","title","onChange","required","Contact","onDelete","sort","a","b","id","map","index","_id","phone","style","fontWeight","marginRight","onClick","ContactList","useLocalStorage","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","setState","useEffect","setItem","stringify","sendDataToApp","setName","number","setNumber","handleChange","e","target","onDuplicateCheck","newContactName","toLowerCase","some","contact","reset","onSubmit","preventDefault","currentTarget","elements","Notiflix","placeholder","isFirstRender","useRef","dispatch","useDispatch","isError","current","fetchContacts","normalizedFilter","filteredContacts","includes","newContact","addContact","Loader","length","query","payload","contactId","deleteContact"],"sourceRoot":""}